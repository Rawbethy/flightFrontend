{"ast":null,"code":"var _jsxFileName = \"/home/robert/Self/Projects/flightFrontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { DateFormat } from './components/Utils/DateFormat';\nimport axios from 'axios';\nimport './App.css';\nimport siteRoutes from './Routes';\nimport Navbar from './components/views/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextData = /*#__PURE__*/createContext({\n  portDict: {},\n  values: {\n    depCity: '',\n    depPort: '',\n    depDate: DateFormat(new Date()),\n    arrCity: '',\n    arrPort: '',\n    retDate: DateFormat(new Date())\n  },\n  setValues: () => {}\n});\nexport default function App() {\n  _s();\n  const [portDict, setDict] = useState({});\n  const [values, setValues] = useState({\n    depCity: '',\n    depPort: '',\n    depDate: DateFormat(new Date()),\n    arrCity: '',\n    arrPort: '',\n    retDate: DateFormat(new Date())\n  });\n  useEffect(() => {\n    const fetchDict = async () => {\n      axios.get('http://ec2-18-188-4-231.us-east-2.compute.amazonaws.com:8080/airlineCodes').then(res => {\n        setDict(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    fetchDict();\n  }, []);\n  useEffect(() => {\n    setDict(portDict);\n    setValues(values);\n  }, [portDict, values]);\n  return /*#__PURE__*/_jsxDEV(ContextData.Provider, {\n    value: {\n      portDict,\n      values,\n      setValues\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: siteRoutes.map((route, index) => /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            Component: route.component\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SmSm+eRkXl2lnp/xS9VPyPoysVw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","BrowserRouter","Router","Routes","Route","DateFormat","axios","siteRoutes","Navbar","jsxDEV","_jsxDEV","ContextData","portDict","values","depCity","depPort","depDate","Date","arrCity","arrPort","retDate","setValues","App","_s","setDict","fetchDict","get","then","res","data","catch","err","console","log","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","route","index","path","Component","component","_c","$RefreshReg$"],"sources":["/home/robert/Self/Projects/flightFrontend/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect, createContext} from 'react';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport {DateFormat} from './components/Utils/DateFormat';\nimport axios from 'axios';\nimport './App.css';\n\nimport siteRoutes from './Routes';\nimport Navbar from './components/views/Navbar';\n\ninterface contextData {\n  portDict: {[key: string]: string[]},\n  values: {\n    depCity: String,\n    depPort: string | string[],\n    depDate: string,\n    arrCity: String,\n    arrPort: string | string[],\n    retDate: string\n  },\n  setValues: React.Dispatch<React.SetStateAction<contextData['values']>>;\n}\n\n\nexport const ContextData = createContext<contextData>({\n  portDict: {},\n  values: {\n    depCity: '',\n    depPort: '',\n    depDate: DateFormat(new Date()),\n    arrCity: '',\n    arrPort: '',\n    retDate: DateFormat(new Date())\n  },\n  setValues:() => {}\n})\n\n\nexport default function App() {\n\n  const [portDict, setDict] = useState<{ [key: string]: string[] }>({});\n  const [values, setValues] = useState<contextData['values']>({\n    depCity: '',\n    depPort: '',\n    depDate: DateFormat(new Date()),\n    arrCity: '',\n    arrPort: '',\n    retDate: DateFormat(new Date())\n  })\n\n  useEffect(() => {\n    const fetchDict = async() => {\n        axios.get('http://ec2-18-188-4-231.us-east-2.compute.amazonaws.com:8080/airlineCodes').then(res => {\n            setDict(res.data);\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n    fetchDict();\n  }, [])\n\n  useEffect(() => {\n    setDict(portDict);\n    setValues(values);\n  }, [portDict, values])\n\n  return (\n\n    <ContextData.Provider value={{portDict, values, setValues}}>\n      <div className=\"App\">\n        <Router>\n          <Navbar />\n          <Routes>\n            {siteRoutes.map((route, index) => (\n              <Route key={index} path={route.path} Component={route.component}></Route>\n            ))}\n          </Routes>\n        </Router>\n      </div>\n    </ContextData.Provider>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}