{"ast":null,"code":"const months = {\n  \"01\": 'January',\n  \"02\": 'February',\n  \"03\": 'March',\n  \"04\": 'April',\n  \"05\": 'May',\n  \"06\": 'June',\n  \"07\": 'July',\n  \"08\": 'August',\n  \"09\": 'September',\n  \"10\": 'October',\n  \"11\": 'November',\n  \"12\": 'December'\n};\nexport const DateFormat = date => {\n  let d = new Date(date);\n  let month = (d.getMonth() + 1).toString().padStart(2, '0');\n  let day = d.getDate().toString().padStart(2, '0');\n  let year = d.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n_c = DateFormat;\nexport const MonthFirstDate = date => {\n  const inputDate = new Date(date);\n  const month = (inputDate.getMonth() + 1).toString().padStart(2, '0');\n  const monthName = months[month];\n  const day = inputDate.getDate().toString().padStart(2, '0');\n  const year = inputDate.getFullYear();\n  return `${monthName} ${day}, ${year}`;\n};\n_c2 = MonthFirstDate;\nexport const AddDays = (date, numDays) => {\n  const inputDate = new Date(date);\n  const newDate = new Date(inputDate.getTime() + numDays * 24 * 60 * 60 * 1000);\n  const month = (newDate.getMonth() + 1).toString().padStart(2, '0');\n  const day = newDate.getDate().toString().padStart(2, '0');\n  const year = newDate.getFullYear();\n  return `${year}-${month}-${day}`;\n};\n_c3 = AddDays;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DateFormat\");\n$RefreshReg$(_c2, \"MonthFirstDate\");\n$RefreshReg$(_c3, \"AddDays\");","map":{"version":3,"names":["months","DateFormat","date","d","Date","month","getMonth","toString","padStart","day","getDate","year","getFullYear","_c","MonthFirstDate","inputDate","monthName","_c2","AddDays","numDays","newDate","getTime","_c3","$RefreshReg$"],"sources":["/home/robert/Self/Projects/flightFrontend/src/components/Utils/DateFormat.tsx"],"sourcesContent":["const months = {\n    \"01\": 'January',\n    \"02\": 'February',\n    \"03\": 'March',\n    \"04\": 'April',\n    \"05\": 'May',\n    \"06\": 'June',\n    \"07\": 'July',\n    \"08\": 'August',\n    \"09\": 'September',\n    \"10\": 'October',\n    \"11\": 'November',\n    \"12\": 'December'\n}\n\nexport const DateFormat = (date: Date) => {\n    let d = new Date(date);\n    let month = (d.getMonth() + 1).toString().padStart(2, '0');\n    let day = d.getDate().toString().padStart(2, '0');\n    let year = d.getFullYear();\n    return `${year}-${month}-${day}`;\n}\n\nexport const MonthFirstDate = (date: string) => {\n    const inputDate = new Date(date);\n\n    const month = (inputDate.getMonth() + 1).toString().padStart(2, '0');\n    const monthName = months[month as keyof typeof months]\n    const day = inputDate.getDate().toString().padStart(2, '0');\n    const year = inputDate.getFullYear();\n    return `${monthName} ${day}, ${year}`\n}\n\nexport const AddDays = (date: string, numDays: number) => {\n    const inputDate = new Date(date);\n    const newDate = new Date(inputDate.getTime() + numDays* 24 * 60 * 60 * 1000)\n    \n    const month = (newDate.getMonth() + 1).toString().padStart(2, '0');\n    const day = newDate.getDate().toString().padStart(2, '0');\n    const year = newDate.getFullYear();\n\n    return `${year}-${month}-${day}`;\n}\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG;EACX,IAAI,EAAE,SAAS;EACf,IAAI,EAAE,UAAU;EAChB,IAAI,EAAE,OAAO;EACb,IAAI,EAAE,OAAO;EACb,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,MAAM;EACZ,IAAI,EAAE,MAAM;EACZ,IAAI,EAAE,QAAQ;EACd,IAAI,EAAE,WAAW;EACjB,IAAI,EAAE,SAAS;EACf,IAAI,EAAE,UAAU;EAChB,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,IAAU,IAAK;EACtC,IAAIC,CAAC,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;EACtB,IAAIG,KAAK,GAAG,CAACF,CAAC,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,IAAIC,GAAG,GAAGN,CAAC,CAACO,OAAO,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACjD,IAAIG,IAAI,GAAGR,CAAC,CAACS,WAAW,CAAC,CAAC;EAC1B,OAAQ,GAAED,IAAK,IAAGN,KAAM,IAAGI,GAAI,EAAC;AACpC,CAAC;AAAAI,EAAA,GANYZ,UAAU;AAQvB,OAAO,MAAMa,cAAc,GAAIZ,IAAY,IAAK;EAC5C,MAAMa,SAAS,GAAG,IAAIX,IAAI,CAACF,IAAI,CAAC;EAEhC,MAAMG,KAAK,GAAG,CAACU,SAAS,CAACT,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACpE,MAAMQ,SAAS,GAAGhB,MAAM,CAACK,KAAK,CAAwB;EACtD,MAAMI,GAAG,GAAGM,SAAS,CAACL,OAAO,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC3D,MAAMG,IAAI,GAAGI,SAAS,CAACH,WAAW,CAAC,CAAC;EACpC,OAAQ,GAAEI,SAAU,IAAGP,GAAI,KAAIE,IAAK,EAAC;AACzC,CAAC;AAAAM,GAAA,GARYH,cAAc;AAU3B,OAAO,MAAMI,OAAO,GAAGA,CAAChB,IAAY,EAAEiB,OAAe,KAAK;EACtD,MAAMJ,SAAS,GAAG,IAAIX,IAAI,CAACF,IAAI,CAAC;EAChC,MAAMkB,OAAO,GAAG,IAAIhB,IAAI,CAACW,SAAS,CAACM,OAAO,CAAC,CAAC,GAAGF,OAAO,GAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;EAE5E,MAAMd,KAAK,GAAG,CAACe,OAAO,CAACd,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAClE,MAAMC,GAAG,GAAGW,OAAO,CAACV,OAAO,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACzD,MAAMG,IAAI,GAAGS,OAAO,CAACR,WAAW,CAAC,CAAC;EAElC,OAAQ,GAAED,IAAK,IAAGN,KAAM,IAAGI,GAAI,EAAC;AACpC,CAAC;AAAAa,GAAA,GATYJ,OAAO;AAAA,IAAAL,EAAA,EAAAI,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}